#!/usr/bin/perl

use strict;
use warnings;

use Data::Dumper;

use JSON_File;
use File::Find;
use Getopt::Long;
use Pod::Usage;
use YAML::Tiny;
use Cwd;

use vars qw/*name *dir *prune $config/;
*name   = *File::Find::name;
*dir    = *File::Find::dir;
*prune  = *File::Find::prune;

my $cwd = cwd();

# set defaults
my $startpath = '.';
my $help = 0;
my $man = 0;
my $configfile = '.drifter.yml';
my $checksum = 'sha256';
my $baseurl = "file://$cwd/";

# get options
GetOptions (
            'help|h|?'     => \$help,
            'man|m'        => \$man,
            'u|url=s'      => \$baseurl,
            'c|checksum=s' => \$checksum,
            'file|f=s'     => \$configfile
           );

# print help
pod2usage(1) if $help;
pod2usage(-exitval => 0, -verbose => 2) if $man;

# load config into config file
# FUTURE: print pretty message about missing file?
my $yaml = YAML::Tiny->read($configfile);
$config = $yaml->[0];

# wanted for box file
sub boxwant {
  # only want json files
  /^.*\.box\z/s
  || return;
  print "\t\tfound box $name\n";
}

# wanted for config file
sub metawant {
  # only want json files
  /^.*\.json\z/s
  || return;

  # do your work here
  tie ( my %foo, 'JSON_File', $_);

  print "filename: $name\n\t";
  print $foo{'description'};
  print "\n";
  File::Find::find({wanted => \&boxwant}, '.');
}

# MAIN LOOP
# start metadata file search
File::Find::find({wanted => \&metawant}, $startpath);

# END MAIN LOOP

__END__
=head1 DRIFTER

drifter - Update Vagrant box metadata files in a directory

=head1 Usage

drifter [options] [DIR]

  Options:
    -h -? --help         Brief help message
    -f --file            Override default config file (.drifter.yml)
    -u --url             Base URL for building metadata
    -c --checksum        Checksum algorithm for building metadata (sha256)

=head1 OPTIONS

=over 8

=item B<--help>

Print a brief help message and exits.

=item B<-f, --file>

Use a different config file. Default(.drifter.yml)

Config file is in YAML format.

=item B<-u, --url>

Box baseurl for building metadata Default(file://$CWD)

=item B<-c, --checksum>

Checksum algorithmn for building metadata Default(sha256)

=back

=head1 Arguments

=over 8

=item B<DIR>

Directory path to start recursive search for metadata files.

=back

=head1 DESCRIPTION
 
 B<drifter> will update the metadata of Vagrant
 boxes found in the path specified.
  
=cut
