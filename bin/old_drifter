#!/usr/bin/perl

use strict;
use warnings;
use lib qw/lib/;

use Data::Dumper;
use Getopt::Long;
use Drifter::Lib;

use YAML::Tiny;
use Pod::Usage;
use Cwd;

# set defaults
my $config;
my $help = 0;
my $man = 0;
my $configfile = '.drifter.yml';
my $cwd = cwd();
my $baseurl = "file://$cwd/";
my $checksum = 'sha256';

# get options
GetOptions (
            'help|h|?'     => \$help,
            'man|m'        => \$man,
            'u|url=s'      => \$baseurl,
            'c|checksum=s' => \$checksum,
            'file|f=s'     => \$configfile
           );

# print help
pod2usage(1) if $help;
pod2usage(-exitval => 0, -verbose => 2) if $man;

# get startpath as argument
my $startpath = $ARGV[0] || '.';

# load config into config file
# FUTURE: print pretty message about missing file?
my $yaml = YAML::Tiny->read($configfile);
$config = $yaml->[0];

my $drift = Drifter::Lib-> new();

$drift->run($startpath);

__END__
=head1 DRIFTER

drifter - Update Vagrant box metadata files in a directory

=head1 Usage

drifter [options] [DIR]

  Options:
    -h -? --help         Brief help message
    -f --file            Override default config file (.drifter.yml)
    -u --url             Base URL for building metadata
    -c --checksum        Checksum algorithm for building metadata (sha256)

=head1 OPTIONS

=over 8

=item B<--help>

Print a brief help message and exits.

=item B<-f, --file>

Use a different config file. Default(.drifter.yml)

Config file is in YAML format.

=item B<-u, --url>

Box baseurl for building metadata Default(file://$CWD)

=item B<-c, --checksum>

Checksum algorithmn for building metadata Default(sha256)

=back

=head1 Arguments

=over 8

=item B<DIR>

Directory path to start recursive search for metadata files.

=back

=head1 DESCRIPTION
 
 B<drifter> will update the metadata of Vagrant
 boxes found in the path specified.
  
=cut
